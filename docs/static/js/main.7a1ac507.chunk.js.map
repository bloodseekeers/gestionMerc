{"version":3,"sources":["components/ToolBar/index.js","components/FormMask/index.js","hooks/useForm.js","services/firebase.service.js","components/NewClient/index.js","components/Orders/index.js","App.js","serviceWorker.js","index.js"],"names":["ToolBar","className","FormMask","setshow","show","addOrEditPedido","initState","useState","values","setvalues","handleInputChange","target","name","value","reset","useForm","tlf","color","tipo","eleccion","cantidad","fecha","hora","info","status","onSubmit","e","preventDefault","placeholder","type","autoComplete","onChange","required","maxLength","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","NewClient","handleModal","a","toast","autoClose","collection","doc","set","onClick","hidden","aria-hidden","Orders","orders","setorders","control","setcontrol","useEffect","handleOrders","onSnapshot","querySnapshot","docs","forEach","push","data","id","onDeleteOrders","window","confirm","delete","handleAcoordion","map","order","key","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7a1ac507.chunk.js","sourcesContent":["import React from 'react'\n\n\n\nexport const ToolBar = () => {\n  \n  \n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-secondary mb-3\">\n          <span className=\"navbar-brand\">Merceria Luisa Maria</span>\n        </nav>\n    )\n}\n","import React from 'react'\nimport useForm from '../../hooks/useForm'\nexport const FormMask = ({setshow, show, addOrEditPedido}) => {\n    \n\n    //Guardar values del form\n    const [values, handleInputChange, reset] = useForm({\n        name: '',\n        tlf: '',\n        color: '',\n        tipo: 'Mascarilla (Sin Bordado)',\n        eleccion: 'Sin Bordado',\n        cantidad: 0,\n        fecha: '',\n        hora: '',\n        info: '',\n        status: 'Pendiente'\n    }) \n    \n    //Control del submit\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      setshow(!show);\n      addOrEditPedido(values)\n      reset()\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n            <div className=\"form-row\">\n                <div className=\"form-col col-lg-6 col-md-6 col-sm-12 my-2\">\n                    <input className=\"form-control\" name=\"name\" placeholder=\"Nombre Cliente\" type=\"text\" autoComplete=\"off\"  onChange={handleInputChange}   required/>\n                </div>\n                <div className=\"form-col col-lg-6 col-md-6 col-sm-12 my-2\">\n                    <input className=\"form-control\" name=\"tlf\" placeholder=\"Tlf o movil\" type=\"number\" autoComplete=\"off\" maxLength=\"9\"  onChange={handleInputChange}  required/>\n                </div>\n            </div>\n                <div className=\"form-group my-2\">\n                    <select className=\"form-control\" name=\"tipo\" onChange={handleInputChange} required>\n                        <option>Mascarilla (Sin Bordado)</option>\n                        <option>Mascarilla Bordada</option>\n                    </select>\n                </div>\n                <div className=\"form-group my-2\">\n                    <input className=\"form-control\" name=\"color\" placeholder=\"Color o Nº\" type=\"text\" autoComplete=\"off\"  onChange={handleInputChange}  required/>\n                </div>\n                <div className=\"form-row\">\n                        <div className=\"form-col col-lg-6 col-md-6 col-sm-12 my-2\">\n                        <input className=\"form-control\" name=\"eleccion\" placeholder=\"Diseño del bordado\" type=\"text\" autoComplete=\"off\" onChange={handleInputChange} />\n                    </div>\n                    <div className=\"form-col col-lg-6 col-md-6 col-sm-12 my-2\">\n                    <input className=\"form-control\" name=\"cantidad\" placeholder=\"Cantidad\" type=\"number\" autoComplete=\"off\" onChange={handleInputChange}  required/>\n                     </div>\n                </div>\n                <div className=\"form-row\">\n                        <div className=\"form-col col-lg-6 col-md-6 col-sm-12 my-2\">\n                        <input className=\"form-control\" name=\"fecha\" type=\"date\" onChange={handleInputChange}  required/>\n                    </div>\n                    <div className=\"form-col col-lg-6 col-md-6 col-sm-12 my-2\">\n                    <input className=\"form-control\" name=\"hora\"  type=\"time\" autoComplete=\"on\"\n                        onChange={handleInputChange}  required/>\n                     </div>\n                </div>\n                <div className=\"form-group\">\n                    <textarea className=\"form-control\" name=\"info\" placeholder=\"Escribe aqui más de un pedido de varios tipos de mascarilla\" onChange={handleInputChange}  >\n\n                    </textarea>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-secondary\">Guardar</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import { useState } from 'react'\n\nexport default function useForm( initState = {}) {\n    \n    const [values, setvalues] = useState(initState)\n\n    const handleInputChange = ({ target }) => {\n        setvalues({...values, [target.name]: target.value})\n    }\n    const reset = () =>{\n        setvalues(initState)\n    }\n    return[ values, handleInputChange, reset]\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firebase-firestore';\nimport 'firebase/firebase-auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBP7H8scDxnOWAIUdpbcl4yUDQmM_UJToA\",\n    authDomain: \"luisa-app.firebaseapp.com\",\n    databaseURL: \"https://luisa-app.firebaseio.com\",\n    projectId: \"luisa-app\",\n    storageBucket: \"luisa-app.appspot.com\",\n    messagingSenderId: \"486385666181\",\n    appId: \"1:486385666181:web:11956586b31f8f780dc1ec\"\n};\n\nconst fb = firebase.initializeApp(firebaseConfig);\n\nexport const db = fb.firestore();\n \n\n","import React, {useState} from 'react'\nimport {FormMask} from '../FormMask'\nimport {db} from '../../services/firebase.service'\nimport {toast} from 'react-toastify'\n\n\n\n\n\nexport default function NewClient() {\n\n    const [show, setshow] = useState(true)\n\n\n    const handleModal = () => {\n        setshow(!show)\n    }\n\n    const addOrEditPedido = async (values) => {\n        if(values === ''){\n            toast('Tienes que agregar un Pedido', {\n                type: 'info',\n                autoClose: 2500,\n            })\n        }else{\n            await db.collection(\"pedidos\").doc().set(values);\n            toast('Pedido guardado',{\n                type: 'success',\n                autoClose: 1500,\n            })\n        }\n    }\n\n    return (\n        <div >\n            <button className=\"btn btn-primary btn-lg rounded-circle fixed-bottom ml-5 mb-5\" onClick={handleModal}> <i className=\"fas fa-plus\"></i></button>\n          <div hidden={show}>\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Nuevo Pedido</h5>\n                    <button type=\"button\" className=\"close\">\n                    <span aria-hidden=\"true\" onClick={handleModal}>&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                        <FormMask show={show} setshow={setshow} addOrEditPedido={addOrEditPedido} />\n                </div>\n                </div>\n            </div>\n        </div>\n        </div>     \n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport NewClient from '../NewClient'\nimport {db} from '../../services/firebase.service'\nimport {toast} from 'react-toastify'\n\nexport const Orders= () => {\n\n    const [orders, setorders] = useState([])\n\n    const [control, setcontrol] = useState(true)\n\n    useEffect(()=>{\n        handleOrders()\n    },[])\n    \n  \n    const handleOrders = async () => {\n        db.collection(\"pedidos\").onSnapshot((querySnapshot) => {\n          const docs = [];\n          querySnapshot.forEach((doc) => {\n            docs.push({ ...doc.data(), id: doc.id });\n          });\n          setorders(docs);\n        });\n      };\n\n      const onDeleteOrders = async (id) => {\n        if(window.confirm('¿ Estas segura ?')){\n            await db.collection('pedidos').doc(id).delete();\n            toast('Pedido eliminado',{\n              type: 'error',\n              autoClose: 1500,\n          })\n        }\n    }\n      const handleAcoordion = () =>{\n          setcontrol(!control)\n        \n      }\n      \n    return (\n        <div className=\"conteiner-fluid\">\n            {\n                orders.map((order)=>{\n                    return (<div className=\"accordion\" key={order.id}>\n                    <div  className=\"card\">\n                        <div className=\"card-header d-flex justify-content-between\">\n                            <button className=\"btn btn-link btn-block text-left\" type=\"button\" onClick={handleAcoordion}>\n                                {order.name} ({order.tipo})\n                            </button>\n                            <div className=\"d-flex\">\n                               <span className=\" mx-3\">\n                                    <i className=\"fas fa-head-side-mask\"></i> {order.cantidad}\n                                </span> \n                                <span>\n                                <i className=\"fas fa-fill-drip\"></i> {order.color}\n                                </span> \n                                <span className=\"mx-3\"><i className=\"fas fa-money-bill-wave-alt\"></i> {order.status}</span>\n                            </div>\n                        </div>\n                    </div>\n                <div className=\"card-body\" hidden={control} >\n                   <div className=\"d-flex justify-content-between\">\n                        <div>\n                            <span><i className=\"fas fa-mobile-alt\"> {order.tlf}</i></span>\n                            \n                        </div>\n                        <div>\n                            <span><i className=\"fas fa-magic\">  {order.eleccion} </i></span>\n                         </div>\n                   </div>\n                   <div className=\"mt-2\">\n                         <p> {order.info}</p>\n                   </div>\n                   <div className=\"text-muted mb-2\">\n                        {order.fecha} hora: {order.hora}\n                    </div>\n                <div>\n                    <button className=\"btn btn-outline-danger\" onClick={()=>{onDeleteOrders(order.id)}}>Completado</button>\n                </div>\n                </div> \n        </div>)\n                })\n            }\n            <NewClient /> \n        </div>\n    )\n}\n","import React from 'react';\nimport { ToolBar } from './components/ToolBar';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Orders } from './components/Orders';\n\n\n\nfunction App() {\n  return (\n    <>\n    <header>\n      <ToolBar />\n    </header>\n      <main>    \n          <ToastContainer />\n          <Orders />\n      </main> \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootswatch/dist/minty/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\n//Firebase\n\nimport './services/firebase.service';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}